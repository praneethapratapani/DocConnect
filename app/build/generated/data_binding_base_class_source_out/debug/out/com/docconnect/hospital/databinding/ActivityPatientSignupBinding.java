// Generated by view binder compiler. Do not edit!
package com.docconnect.hospital.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.docconnect.hospital.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPatientSignupBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout addInfo;

  @NonNull
  public final Button addPatientInfo;

  @NonNull
  public final RadioGroup genderPatient;

  @NonNull
  public final CardView patientCardOne;

  @NonNull
  public final EditText patientDOB;

  @NonNull
  public final EditText patientEmail;

  @NonNull
  public final RadioButton patientFemale;

  @NonNull
  public final LinearLayout patientInfoList;

  @NonNull
  public final RadioButton patientMale;

  @NonNull
  public final EditText patientName;

  @NonNull
  public final EditText patientPassword;

  @NonNull
  public final EditText patientWeight;

  @NonNull
  public final ProgressBar progressBar3;

  private ActivityPatientSignupBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout addInfo, @NonNull Button addPatientInfo,
      @NonNull RadioGroup genderPatient, @NonNull CardView patientCardOne,
      @NonNull EditText patientDOB, @NonNull EditText patientEmail,
      @NonNull RadioButton patientFemale, @NonNull LinearLayout patientInfoList,
      @NonNull RadioButton patientMale, @NonNull EditText patientName,
      @NonNull EditText patientPassword, @NonNull EditText patientWeight,
      @NonNull ProgressBar progressBar3) {
    this.rootView = rootView;
    this.addInfo = addInfo;
    this.addPatientInfo = addPatientInfo;
    this.genderPatient = genderPatient;
    this.patientCardOne = patientCardOne;
    this.patientDOB = patientDOB;
    this.patientEmail = patientEmail;
    this.patientFemale = patientFemale;
    this.patientInfoList = patientInfoList;
    this.patientMale = patientMale;
    this.patientName = patientName;
    this.patientPassword = patientPassword;
    this.patientWeight = patientWeight;
    this.progressBar3 = progressBar3;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPatientSignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPatientSignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_patient_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPatientSignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout addInfo = (RelativeLayout) rootView;

      id = R.id.add_patient_info;
      Button addPatientInfo = ViewBindings.findChildViewById(rootView, id);
      if (addPatientInfo == null) {
        break missingId;
      }

      id = R.id.gender_patient;
      RadioGroup genderPatient = ViewBindings.findChildViewById(rootView, id);
      if (genderPatient == null) {
        break missingId;
      }

      id = R.id.patient_cardOne;
      CardView patientCardOne = ViewBindings.findChildViewById(rootView, id);
      if (patientCardOne == null) {
        break missingId;
      }

      id = R.id.patient_DOB;
      EditText patientDOB = ViewBindings.findChildViewById(rootView, id);
      if (patientDOB == null) {
        break missingId;
      }

      id = R.id.patient_email;
      EditText patientEmail = ViewBindings.findChildViewById(rootView, id);
      if (patientEmail == null) {
        break missingId;
      }

      id = R.id.patient_female;
      RadioButton patientFemale = ViewBindings.findChildViewById(rootView, id);
      if (patientFemale == null) {
        break missingId;
      }

      id = R.id.patient_info_list;
      LinearLayout patientInfoList = ViewBindings.findChildViewById(rootView, id);
      if (patientInfoList == null) {
        break missingId;
      }

      id = R.id.patient_male;
      RadioButton patientMale = ViewBindings.findChildViewById(rootView, id);
      if (patientMale == null) {
        break missingId;
      }

      id = R.id.patient_name;
      EditText patientName = ViewBindings.findChildViewById(rootView, id);
      if (patientName == null) {
        break missingId;
      }

      id = R.id.patient_password;
      EditText patientPassword = ViewBindings.findChildViewById(rootView, id);
      if (patientPassword == null) {
        break missingId;
      }

      id = R.id.patient_weight;
      EditText patientWeight = ViewBindings.findChildViewById(rootView, id);
      if (patientWeight == null) {
        break missingId;
      }

      id = R.id.progressBar3;
      ProgressBar progressBar3 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar3 == null) {
        break missingId;
      }

      return new ActivityPatientSignupBinding((RelativeLayout) rootView, addInfo, addPatientInfo,
          genderPatient, patientCardOne, patientDOB, patientEmail, patientFemale, patientInfoList,
          patientMale, patientName, patientPassword, patientWeight, progressBar3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
